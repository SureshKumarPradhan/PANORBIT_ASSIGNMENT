{"ast":null,"code":"var _jsxFileName = \"/home/suresh/Desktop/panorbit/src/Component/ChatList/ChatList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addChatData } from \"../../Reducer/reducer\";\nimport { Box, Typography } from \"@mui/material\";\nimport \"./chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet AllChatData = [{\n  id: 1,\n  text: \"Hello!\",\n  sender: \"user\"\n}, {\n  id: 2,\n  text: \"Hi there!\",\n  sender: \"bot\"\n}, {\n  id: 3,\n  text: \"Hello!\",\n  sender: \"user\"\n}, {\n  id: 4,\n  text: \"Hi there!\",\n  sender: \"bot\"\n}, {\n  id: 5,\n  text: \"Hello!\",\n  sender: \"user\"\n}, {\n  id: 6,\n  text: \"Hi there!\",\n  sender: \"bot\"\n}, {\n  id: 7,\n  text: \"Hello!\",\n  sender: \"user\"\n}, {\n  id: 8,\n  text: \"Hi there!\",\n  sender: \"bot\"\n}];\nconst ChatList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const ChatData = useSelector(state => {\n    var _state$reducer, _state$reducer$ChatDa;\n    return state === null || state === void 0 ? void 0 : (_state$reducer = state.reducer) === null || _state$reducer === void 0 ? void 0 : (_state$reducer$ChatDa = _state$reducer.ChatData) === null || _state$reducer$ChatDa === void 0 ? void 0 : _state$reducer$ChatDa.chat;\n  });\n  useEffect(() => {\n    dispatch(addChatData(AllChatData));\n  }, []);\n  console.log(\"chatData\", ChatData);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: ChatData.map(message => /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: `chat-message ${message.sender === \"user\" ? \"user\" : \"bot\"}`,\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 16\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatList, \"2+SefA3LY7NnW1KCla8mkYjgRXc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","addChatData","Box","Typography","jsxDEV","_jsxDEV","AllChatData","id","text","sender","ChatList","_s","dispatch","ChatData","state","_state$reducer","_state$reducer$ChatDa","reducer","chat","console","log","children","className","map","message","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["/home/suresh/Desktop/panorbit/src/Component/ChatList/ChatList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addChatData } from \"../../Reducer/reducer\";\nimport { Box, Typography } from \"@mui/material\";\nimport \"./chat.css\";\nlet AllChatData = [\n  { id: 1, text: \"Hello!\", sender: \"user\" },\n  { id: 2, text: \"Hi there!\", sender: \"bot\" },\n  { id: 3, text: \"Hello!\", sender: \"user\" },\n  { id: 4, text: \"Hi there!\", sender: \"bot\" },\n  { id: 5, text: \"Hello!\", sender: \"user\" },\n  { id: 6, text: \"Hi there!\", sender: \"bot\" },\n  { id: 7, text: \"Hello!\", sender: \"user\" },\n  { id: 8, text: \"Hi there!\", sender: \"bot\" },\n];\nconst ChatList = () => {\n  const dispatch = useDispatch();\n  const ChatData = useSelector((state) => state?.reducer?.ChatData?.chat);\n  useEffect(() => {\n    dispatch(addChatData(AllChatData));\n  }, []);\n  console.log(\"chatData\", ChatData);\n  return (\n    <Box>\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\">\n          {ChatData.map((message) => (\n            <Box key={message.id}>\n             { <Typography\n                className={`chat-message ${\n                  message.sender === \"user\" ? \"user\" : \"bot\"\n                }`}\n              >\n                {message.text}\n              </Typography>}\n            </Box>\n          ))}\n        </div>\n        <div className=\"chat-input\">\n          <input type=\"text\" placeholder=\"Type your message\" />\n          <button className=\"send-button\">Send</button>\n        </div>\n      </div>\n    </Box>\n  );\n};\nexport default ChatList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}